<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.park.cloud.cms.mapper.DictSectionPOMapper">
  <resultMap id="BaseResultMap" type="com.park.cloud.common.domain.po.dict.DictSectionPO">
    <id column="section_id" jdbcType="INTEGER" property="sectionId" />
    <result column="section_name" jdbcType="VARCHAR" property="sectionName" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="canton_id" jdbcType="INTEGER" property="cantonId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="monthly_ticket_limit" jdbcType="INTEGER" property="monthlyTicketLimit" />
    <result column="monthly_ticket_price" jdbcType="INTEGER" property="monthlyTicketPrice" />
    <result column="pricing_strategy_id" jdbcType="INTEGER" property="pricingStrategyId" />
    <result column="monthly_strategy_id" jdbcType="INTEGER" property="monthlyStrategyId" />
    <result column="section_mold" jdbcType="INTEGER" property="sectionMold" />
    <result column="section_longitude" jdbcType="VARCHAR" property="sectionLongitude" />
    <result column="section_latitude" jdbcType="VARCHAR" property="sectionLatitude" />
    <result column="section_remark" jdbcType="VARCHAR" property="sectionRemark" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="add_user" jdbcType="INTEGER" property="addUser" />
    <result column="bottom_direction" jdbcType="VARCHAR" property="bottomDirection" />
    <result column="seation_address" jdbcType="VARCHAR" property="seationAddress" />
    <result column="police_section_code" jdbcType="VARCHAR" property="policeSectionCode" />
    <result column="police_section_name" jdbcType="VARCHAR" property="policeSectionName" />
    <result column="berth_form" jdbcType="INTEGER" property="berthForm" />
    <result column="city_code" jdbcType="VARCHAR" property="cityCode" />
    <result column="total_berth_no" jdbcType="INTEGER" property="totalBerthNo" />
    <result column="current_berth_no" jdbcType="INTEGER" property="currentBerthNo" />
    <result column="saturation" jdbcType="DECIMAL" property="saturation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    section_id, section_name, city_id, canton_id, area_id, monthly_ticket_limit, monthly_ticket_price, 
    pricing_strategy_id, monthly_strategy_id, section_mold, section_longitude, section_latitude, 
    section_remark, add_time, add_user, bottom_direction, seation_address, police_section_code, 
    police_section_name, berth_form, city_code, total_berth_no, current_berth_no, saturation
  </sql>
  <select id="selectByExample" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dict_section
    where section_id = #{sectionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dict_section
    where section_id = #{sectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPOExample">
    delete from dict_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPO">
    insert into dict_section (section_id, section_name, city_id, 
      canton_id, area_id, monthly_ticket_limit, 
      monthly_ticket_price, pricing_strategy_id, 
      monthly_strategy_id, section_mold, section_longitude, 
      section_latitude, section_remark, add_time, 
      add_user, bottom_direction, seation_address, 
      police_section_code, police_section_name, berth_form, 
      city_code, total_berth_no, current_berth_no, 
      saturation)
    values (#{sectionId,jdbcType=INTEGER}, #{sectionName,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, 
      #{cantonId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{monthlyTicketLimit,jdbcType=INTEGER}, 
      #{monthlyTicketPrice,jdbcType=INTEGER}, #{pricingStrategyId,jdbcType=INTEGER}, 
      #{monthlyStrategyId,jdbcType=INTEGER}, #{sectionMold,jdbcType=INTEGER}, #{sectionLongitude,jdbcType=VARCHAR}, 
      #{sectionLatitude,jdbcType=VARCHAR}, #{sectionRemark,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{addUser,jdbcType=INTEGER}, #{bottomDirection,jdbcType=VARCHAR}, #{seationAddress,jdbcType=VARCHAR}, 
      #{policeSectionCode,jdbcType=VARCHAR}, #{policeSectionName,jdbcType=VARCHAR}, #{berthForm,jdbcType=INTEGER}, 
      #{cityCode,jdbcType=VARCHAR}, #{totalBerthNo,jdbcType=INTEGER}, #{currentBerthNo,jdbcType=INTEGER}, 
      #{saturation,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPO">
    insert into dict_section
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sectionId != null">
        section_id,
      </if>
      <if test="sectionName != null">
        section_name,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="cantonId != null">
        canton_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="monthlyTicketLimit != null">
        monthly_ticket_limit,
      </if>
      <if test="monthlyTicketPrice != null">
        monthly_ticket_price,
      </if>
      <if test="pricingStrategyId != null">
        pricing_strategy_id,
      </if>
      <if test="monthlyStrategyId != null">
        monthly_strategy_id,
      </if>
      <if test="sectionMold != null">
        section_mold,
      </if>
      <if test="sectionLongitude != null">
        section_longitude,
      </if>
      <if test="sectionLatitude != null">
        section_latitude,
      </if>
      <if test="sectionRemark != null">
        section_remark,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="addUser != null">
        add_user,
      </if>
      <if test="bottomDirection != null">
        bottom_direction,
      </if>
      <if test="seationAddress != null">
        seation_address,
      </if>
      <if test="policeSectionCode != null">
        police_section_code,
      </if>
      <if test="policeSectionName != null">
        police_section_name,
      </if>
      <if test="berthForm != null">
        berth_form,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="totalBerthNo != null">
        total_berth_no,
      </if>
      <if test="currentBerthNo != null">
        current_berth_no,
      </if>
      <if test="saturation != null">
        saturation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionName != null">
        #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="monthlyTicketLimit != null">
        #{monthlyTicketLimit,jdbcType=INTEGER},
      </if>
      <if test="monthlyTicketPrice != null">
        #{monthlyTicketPrice,jdbcType=INTEGER},
      </if>
      <if test="pricingStrategyId != null">
        #{pricingStrategyId,jdbcType=INTEGER},
      </if>
      <if test="monthlyStrategyId != null">
        #{monthlyStrategyId,jdbcType=INTEGER},
      </if>
      <if test="sectionMold != null">
        #{sectionMold,jdbcType=INTEGER},
      </if>
      <if test="sectionLongitude != null">
        #{sectionLongitude,jdbcType=VARCHAR},
      </if>
      <if test="sectionLatitude != null">
        #{sectionLatitude,jdbcType=VARCHAR},
      </if>
      <if test="sectionRemark != null">
        #{sectionRemark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUser != null">
        #{addUser,jdbcType=INTEGER},
      </if>
      <if test="bottomDirection != null">
        #{bottomDirection,jdbcType=VARCHAR},
      </if>
      <if test="seationAddress != null">
        #{seationAddress,jdbcType=VARCHAR},
      </if>
      <if test="policeSectionCode != null">
        #{policeSectionCode,jdbcType=VARCHAR},
      </if>
      <if test="policeSectionName != null">
        #{policeSectionName,jdbcType=VARCHAR},
      </if>
      <if test="berthForm != null">
        #{berthForm,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="totalBerthNo != null">
        #{totalBerthNo,jdbcType=INTEGER},
      </if>
      <if test="currentBerthNo != null">
        #{currentBerthNo,jdbcType=INTEGER},
      </if>
      <if test="saturation != null">
        #{saturation,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPOExample" resultType="java.lang.Long">
    select count(*) from dict_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict_section
    <set>
      <if test="record.sectionId != null">
        section_id = #{record.sectionId,jdbcType=INTEGER},
      </if>
      <if test="record.sectionName != null">
        section_name = #{record.sectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.cantonId != null">
        canton_id = #{record.cantonId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.monthlyTicketLimit != null">
        monthly_ticket_limit = #{record.monthlyTicketLimit,jdbcType=INTEGER},
      </if>
      <if test="record.monthlyTicketPrice != null">
        monthly_ticket_price = #{record.monthlyTicketPrice,jdbcType=INTEGER},
      </if>
      <if test="record.pricingStrategyId != null">
        pricing_strategy_id = #{record.pricingStrategyId,jdbcType=INTEGER},
      </if>
      <if test="record.monthlyStrategyId != null">
        monthly_strategy_id = #{record.monthlyStrategyId,jdbcType=INTEGER},
      </if>
      <if test="record.sectionMold != null">
        section_mold = #{record.sectionMold,jdbcType=INTEGER},
      </if>
      <if test="record.sectionLongitude != null">
        section_longitude = #{record.sectionLongitude,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionLatitude != null">
        section_latitude = #{record.sectionLatitude,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionRemark != null">
        section_remark = #{record.sectionRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addUser != null">
        add_user = #{record.addUser,jdbcType=INTEGER},
      </if>
      <if test="record.bottomDirection != null">
        bottom_direction = #{record.bottomDirection,jdbcType=VARCHAR},
      </if>
      <if test="record.seationAddress != null">
        seation_address = #{record.seationAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.policeSectionCode != null">
        police_section_code = #{record.policeSectionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.policeSectionName != null">
        police_section_name = #{record.policeSectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.berthForm != null">
        berth_form = #{record.berthForm,jdbcType=INTEGER},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.totalBerthNo != null">
        total_berth_no = #{record.totalBerthNo,jdbcType=INTEGER},
      </if>
      <if test="record.currentBerthNo != null">
        current_berth_no = #{record.currentBerthNo,jdbcType=INTEGER},
      </if>
      <if test="record.saturation != null">
        saturation = #{record.saturation,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict_section
    set section_id = #{record.sectionId,jdbcType=INTEGER},
      section_name = #{record.sectionName,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER},
      canton_id = #{record.cantonId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      monthly_ticket_limit = #{record.monthlyTicketLimit,jdbcType=INTEGER},
      monthly_ticket_price = #{record.monthlyTicketPrice,jdbcType=INTEGER},
      pricing_strategy_id = #{record.pricingStrategyId,jdbcType=INTEGER},
      monthly_strategy_id = #{record.monthlyStrategyId,jdbcType=INTEGER},
      section_mold = #{record.sectionMold,jdbcType=INTEGER},
      section_longitude = #{record.sectionLongitude,jdbcType=VARCHAR},
      section_latitude = #{record.sectionLatitude,jdbcType=VARCHAR},
      section_remark = #{record.sectionRemark,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      add_user = #{record.addUser,jdbcType=INTEGER},
      bottom_direction = #{record.bottomDirection,jdbcType=VARCHAR},
      seation_address = #{record.seationAddress,jdbcType=VARCHAR},
      police_section_code = #{record.policeSectionCode,jdbcType=VARCHAR},
      police_section_name = #{record.policeSectionName,jdbcType=VARCHAR},
      berth_form = #{record.berthForm,jdbcType=INTEGER},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      total_berth_no = #{record.totalBerthNo,jdbcType=INTEGER},
      current_berth_no = #{record.currentBerthNo,jdbcType=INTEGER},
      saturation = #{record.saturation,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPO">
    update dict_section
    <set>
      <if test="sectionName != null">
        section_name = #{sectionName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        canton_id = #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="monthlyTicketLimit != null">
        monthly_ticket_limit = #{monthlyTicketLimit,jdbcType=INTEGER},
      </if>
      <if test="monthlyTicketPrice != null">
        monthly_ticket_price = #{monthlyTicketPrice,jdbcType=INTEGER},
      </if>
      <if test="pricingStrategyId != null">
        pricing_strategy_id = #{pricingStrategyId,jdbcType=INTEGER},
      </if>
      <if test="monthlyStrategyId != null">
        monthly_strategy_id = #{monthlyStrategyId,jdbcType=INTEGER},
      </if>
      <if test="sectionMold != null">
        section_mold = #{sectionMold,jdbcType=INTEGER},
      </if>
      <if test="sectionLongitude != null">
        section_longitude = #{sectionLongitude,jdbcType=VARCHAR},
      </if>
      <if test="sectionLatitude != null">
        section_latitude = #{sectionLatitude,jdbcType=VARCHAR},
      </if>
      <if test="sectionRemark != null">
        section_remark = #{sectionRemark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUser != null">
        add_user = #{addUser,jdbcType=INTEGER},
      </if>
      <if test="bottomDirection != null">
        bottom_direction = #{bottomDirection,jdbcType=VARCHAR},
      </if>
      <if test="seationAddress != null">
        seation_address = #{seationAddress,jdbcType=VARCHAR},
      </if>
      <if test="policeSectionCode != null">
        police_section_code = #{policeSectionCode,jdbcType=VARCHAR},
      </if>
      <if test="policeSectionName != null">
        police_section_name = #{policeSectionName,jdbcType=VARCHAR},
      </if>
      <if test="berthForm != null">
        berth_form = #{berthForm,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="totalBerthNo != null">
        total_berth_no = #{totalBerthNo,jdbcType=INTEGER},
      </if>
      <if test="currentBerthNo != null">
        current_berth_no = #{currentBerthNo,jdbcType=INTEGER},
      </if>
      <if test="saturation != null">
        saturation = #{saturation,jdbcType=DECIMAL},
      </if>
    </set>
    where section_id = #{sectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.cloud.common.domain.po.dict.DictSectionPO">
    update dict_section
    set section_name = #{sectionName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER},
      canton_id = #{cantonId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      monthly_ticket_limit = #{monthlyTicketLimit,jdbcType=INTEGER},
      monthly_ticket_price = #{monthlyTicketPrice,jdbcType=INTEGER},
      pricing_strategy_id = #{pricingStrategyId,jdbcType=INTEGER},
      monthly_strategy_id = #{monthlyStrategyId,jdbcType=INTEGER},
      section_mold = #{sectionMold,jdbcType=INTEGER},
      section_longitude = #{sectionLongitude,jdbcType=VARCHAR},
      section_latitude = #{sectionLatitude,jdbcType=VARCHAR},
      section_remark = #{sectionRemark,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_user = #{addUser,jdbcType=INTEGER},
      bottom_direction = #{bottomDirection,jdbcType=VARCHAR},
      seation_address = #{seationAddress,jdbcType=VARCHAR},
      police_section_code = #{policeSectionCode,jdbcType=VARCHAR},
      police_section_name = #{policeSectionName,jdbcType=VARCHAR},
      berth_form = #{berthForm,jdbcType=INTEGER},
      city_code = #{cityCode,jdbcType=VARCHAR},
      total_berth_no = #{totalBerthNo,jdbcType=INTEGER},
      current_berth_no = #{currentBerthNo,jdbcType=INTEGER},
      saturation = #{saturation,jdbcType=DECIMAL}
    where section_id = #{sectionId,jdbcType=INTEGER}
  </update>

  <select id="selectByDto" parameterType="com.park.cloud.common.domain.dto.cms.DictSectionDto"
          resultType="com.park.cloud.common.domain.vo.cms.DictSectionVO">
    SELECT
    a.section_id as sectionId
    ,a.section_name as sectionName
    ,a.city_id as cityId
    ,c.city_name as cityName
    ,a.canton_id as cantonId
    ,d.canton_name as cantonName
    ,a.area_id as areaId
    ,e.area_name as areaName
    ,a.monthly_ticket_limit as monthlyTicketLimit
    ,a.pricing_strategy_id as pricingStrategyId
    ,f.pricing_strategy_name as pricingStrategyName
    ,a.monthly_strategy_id as monthlyStrategyId
    ,g.monthly_strategy_name as monthlyStrategyName
    ,a.section_mold as sectionMold
    ,a.section_longitude as sectionLongitude
    ,a.section_latitude as sectionLatitude
    ,a.section_remark as sectionRemark
    ,a.bottom_direction as bottomDirection
    ,a.seation_address as seationAddress
    ,a.berth_form as berthForm
    ,( SELECT count( 0 ) FROM dict_berth_city WHERE section_id = a.section_id ) AS totalBerthNo
    ,ifnull(h.work_num, 0) as workNum
    ,ifnull(h.non_work_num, 0) as nonWorkNum
    ,ifnull(h.all_num, 0) as allNum
    ,a.add_time as addTime
    ,b.user_true_name as addUserName
    FROM dict_section a
    left join sys_user b on b.user_id = a.add_user
    left join dict_city c on c.city_id = a.city_id
    left join dict_canton d on d.canton_id = a.canton_id
    left join dict_area e on e.area_id = a.area_id
    left join tra_pricing_strategy f on f.Pricing_strategy_id = a.pricing_strategy_id
    left join tra_monthly_strategy g on g.monthly_strategy_id = a.monthly_strategy_id
    left join tra_parking_monthly_info h on h.parking_section_id = a.section_id and h.stats_month = date_format(now(), '%Y-%m') and h.parking_type = 1
    <where>
      1=1
      <if test="cantonId != null">
        and a.canton_id = #{cantonId}
      </if>
      <if test="sectionName != null">
        and a.section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test="areaId != null">
        and a.area_id = #{areaId}
      </if>
      <if test="sectionMold != null">
        and a.section_mold = #{sectionMold}
      </if>
      <if test="loginUserAreaAssType == 1">
        and a.city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and a.canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and a.area_id in (${loginUserAreaIds})
      </if>
    </where>
    order by a.add_time desc
  </select>

  <select id="selectListByDto" parameterType="com.park.cloud.common.domain.dto.cms.DictSectionDto"
          resultType="com.park.cloud.common.domain.vo.cms.DictSectionListVO">
    SELECT
    a.section_id as sectionId
    ,a.section_name as sectionName
    FROM dict_section a
    <where>
      1=1
      <if test="cantonId != null">
        and a.canton_id = #{cantonId}
      </if>
      <if test="sectionName != null">
        and a.section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test="areaId != null">
        and a.area_id = #{areaId}
      </if>
      <if test="sectionMold != null">
        and a.section_mold = #{sectionMold}
      </if>
      <if test="loginUserAreaAssType == 1">
        and a.city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and a.canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and a.area_id in (${loginUserAreaIds})
      </if>
    </where>
    order by a.add_time desc
  </select>

  <select id="selectListWithParentByDto" parameterType="com.park.cloud.common.domain.dto.cms.DictSectionDto"
          resultType="com.park.cloud.common.domain.vo.cms.DictSectionVO">
    SELECT
    a.section_id as sectionId
    ,a.section_name as sectionName
    ,a.city_id as cityId
    ,c.city_name as cityName
    ,a.canton_id as cantonId
    ,d.canton_name as cantonName
    ,a.area_id as areaId
    ,e.area_name as areaName
    FROM dict_section a
    left join dict_city c on c.city_id = a.city_id
    left join dict_canton d on d.canton_id = a.canton_id
    left join dict_area e on e.area_id = a.area_id
    <where>
      1=1
      <if test="cantonId != null">
        and a.canton_id = #{cantonId}
      </if>
      <if test="sectionName != null">
        and a.section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test="areaId != null">
        and a.area_id = #{areaId}
      </if>
      <if test="sectionMold != null">
        and a.section_mold = #{sectionMold}
      </if>
      <if test="loginUserAreaAssType == 1">
        and a.city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and a.canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and a.area_id in (${loginUserAreaIds})
      </if>
    </where>
    order by a.add_time desc
  </select>

  <select id="selectDetailById" parameterType="java.lang.Integer"
          resultType="com.park.cloud.common.domain.vo.cms.DictSectionVO">
    SELECT
    a.section_id as sectionId
    ,a.section_name as sectionName
    ,a.city_id as cityId
    ,c.city_name as cityName
    ,a.canton_id as cantonId
    ,d.canton_name as cantonName
    ,a.area_id as areaId
    ,e.area_name as areaName
    ,a.monthly_ticket_limit as monthlyTicketLimit
    ,a.pricing_strategy_id as pricingStrategyId
    ,f.pricing_strategy_name as pricingStrategyName
    ,a.monthly_strategy_id as monthlyStrategyId
    ,g.monthly_strategy_name as monthlyStrategyName
    ,a.section_mold as sectionMold
    ,a.section_longitude as sectionLongitude
    ,a.section_latitude as sectionLatitude
    ,a.section_remark as sectionRemark
    ,a.bottom_direction as bottomDirection
    ,a.seation_address as seationAddress
    ,a.berth_form as berthForm
    ,a.total_berth_no as totalBerthNo
    ,ifnull(h.work_num, 0) as workNum
    ,ifnull(h.non_work_num, 0) as nonWorkNum
    ,ifnull(h.all_num, 0) as allNum
    ,a.add_time as addTime
    ,b.user_true_name as addUserName
    FROM dict_section a
    left join sys_user b on b.user_id = a.add_user
    left join dict_city c on c.city_id = a.city_id
    left join dict_canton d on d.canton_id = a.canton_id
    left join dict_area e on e.area_id = a.area_id
    left join tra_pricing_strategy f on f.Pricing_strategy_id = a.pricing_strategy_id
    left join tra_monthly_strategy g on g.monthly_strategy_id = a.monthly_strategy_id
    left join tra_parking_monthly_info h on h.parking_section_id = a.section_id and h.stats_month = date_format(now(), '%Y-%m') and h.parking_type = 1
    <where>
      a.section_id = #{sectionId}
    </where>
  </select>
  <update id="updateTotalBerthNo" parameterType="java.lang.Integer">
    update dict_section
    set
    total_berth_no = (select count(*) from dict_berth_city b where b.section_id = #{sectionId})
    where section_id = #{sectionId}
  </update>
<select id="findSection" parameterType="com.park.cloud.common.domain.dto.cms.FindCantonDto" resultType="com.park.cloud.common.domain.vo.cms.FindSectionAndParkVO">
  SELECT
  section_name as parkingSectionName,
  section_id as  parkingSectionId
  FROM dict_section
  <where>
    1=1
    <if test="loginUserAreaAssType == 1">
      and city_id in (${loginUserCityIds})
    </if>
    <if test="loginUserAreaAssType == 2">
      and canton_id in (${loginUserCantonIds})
    </if>
    <if test="loginUserAreaAssType == 3">
      and area_id in (${loginUserAreaIds})
    </if>
  </where>
</select>
  <select id="findParkName" parameterType="com.park.cloud.common.domain.dto.cms.FindCantonDto" resultType="com.park.cloud.common.domain.vo.cms.FindSectionAndParkVO">
    select  parking_name as parkingSectionName,
      parking_id  as  parkingSectionId
    from dict_parking_city
    <where>
      1=1
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
</mapper>