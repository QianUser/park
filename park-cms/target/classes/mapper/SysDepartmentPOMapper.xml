<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.park.cloud.cms.mapper.SysDepartmentPOMapper">
  <resultMap id="BaseResultMap" type="com.park.cloud.common.domain.po.sys.SysDepartmentPO">
    <id column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="parent_dept_id" jdbcType="INTEGER" property="parentDeptId" />
    <result column="dept_remark" jdbcType="VARCHAR" property="deptRemark" />
    <result column="dept_status" jdbcType="INTEGER" property="deptStatus" />
    <result column="dept_sort" jdbcType="INTEGER" property="deptSort" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="add_user" jdbcType="INTEGER" property="addUser" />
    <result column="dept_type_id" jdbcType="INTEGER" property="deptTypeId" />
    <result column="canton_id" jdbcType="INTEGER" property="cantonId" />
    <result column="dept_relation_id" jdbcType="INTEGER" property="deptRelationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dept_id, company_id, dept_name, parent_dept_id, dept_remark, dept_status, dept_sort, 
    add_time, add_user, dept_type_id, canton_id, dept_relation_id
  </sql>
  <select id="selectByExample" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_department
    where dept_id = #{deptId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPOExample">
    delete from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPO">
    insert into sys_department (dept_id, company_id, dept_name, 
      parent_dept_id, dept_remark, dept_status, 
      dept_sort, add_time, add_user, 
      dept_type_id, canton_id, dept_relation_id
      )
    values (#{deptId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, 
      #{parentDeptId,jdbcType=INTEGER}, #{deptRemark,jdbcType=VARCHAR}, #{deptStatus,jdbcType=INTEGER}, 
      #{deptSort,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{addUser,jdbcType=INTEGER}, 
      #{deptTypeId,jdbcType=INTEGER}, #{cantonId,jdbcType=INTEGER}, #{deptRelationId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPO">
    insert into sys_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="deptName != null">
        dept_name,
      </if>
      <if test="parentDeptId != null">
        parent_dept_id,
      </if>
      <if test="deptRemark != null">
        dept_remark,
      </if>
      <if test="deptStatus != null">
        dept_status,
      </if>
      <if test="deptSort != null">
        dept_sort,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="addUser != null">
        add_user,
      </if>
      <if test="deptTypeId != null">
        dept_type_id,
      </if>
      <if test="cantonId != null">
        canton_id,
      </if>
      <if test="deptRelationId != null">
        dept_relation_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentDeptId != null">
        #{parentDeptId,jdbcType=INTEGER},
      </if>
      <if test="deptRemark != null">
        #{deptRemark,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null">
        #{deptStatus,jdbcType=INTEGER},
      </if>
      <if test="deptSort != null">
        #{deptSort,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUser != null">
        #{addUser,jdbcType=INTEGER},
      </if>
      <if test="deptTypeId != null">
        #{deptTypeId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="deptRelationId != null">
        #{deptRelationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPOExample" resultType="java.lang.Long">
    select count(*) from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_department
    <set>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null">
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentDeptId != null">
        parent_dept_id = #{record.parentDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.deptRemark != null">
        dept_remark = #{record.deptRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.deptStatus != null">
        dept_status = #{record.deptStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deptSort != null">
        dept_sort = #{record.deptSort,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addUser != null">
        add_user = #{record.addUser,jdbcType=INTEGER},
      </if>
      <if test="record.deptTypeId != null">
        dept_type_id = #{record.deptTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.cantonId != null">
        canton_id = #{record.cantonId,jdbcType=INTEGER},
      </if>
      <if test="record.deptRelationId != null">
        dept_relation_id = #{record.deptRelationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_department
    set dept_id = #{record.deptId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      dept_name = #{record.deptName,jdbcType=VARCHAR},
      parent_dept_id = #{record.parentDeptId,jdbcType=INTEGER},
      dept_remark = #{record.deptRemark,jdbcType=VARCHAR},
      dept_status = #{record.deptStatus,jdbcType=INTEGER},
      dept_sort = #{record.deptSort,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      add_user = #{record.addUser,jdbcType=INTEGER},
      dept_type_id = #{record.deptTypeId,jdbcType=INTEGER},
      canton_id = #{record.cantonId,jdbcType=INTEGER},
      dept_relation_id = #{record.deptRelationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPO">
    update sys_department
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentDeptId != null">
        parent_dept_id = #{parentDeptId,jdbcType=INTEGER},
      </if>
      <if test="deptRemark != null">
        dept_remark = #{deptRemark,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null">
        dept_status = #{deptStatus,jdbcType=INTEGER},
      </if>
      <if test="deptSort != null">
        dept_sort = #{deptSort,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUser != null">
        add_user = #{addUser,jdbcType=INTEGER},
      </if>
      <if test="deptTypeId != null">
        dept_type_id = #{deptTypeId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        canton_id = #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="deptRelationId != null">
        dept_relation_id = #{deptRelationId,jdbcType=INTEGER},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.cloud.common.domain.po.sys.SysDepartmentPO">
    update sys_department
    set company_id = #{companyId,jdbcType=INTEGER},
      dept_name = #{deptName,jdbcType=VARCHAR},
      parent_dept_id = #{parentDeptId,jdbcType=INTEGER},
      dept_remark = #{deptRemark,jdbcType=VARCHAR},
      dept_status = #{deptStatus,jdbcType=INTEGER},
      dept_sort = #{deptSort,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_user = #{addUser,jdbcType=INTEGER},
      dept_type_id = #{deptTypeId,jdbcType=INTEGER},
      canton_id = #{cantonId,jdbcType=INTEGER},
      dept_relation_id = #{deptRelationId,jdbcType=INTEGER}
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>

  <select id="selectByDto" parameterType="com.park.cloud.common.domain.dto.cms.SysDepartmentDto"
          resultType="com.park.cloud.common.domain.vo.cms.SysDepartmentVO">
    SELECT
    a.dept_id as deptId
    ,a.company_id as companyId
    ,c.company_name as companyName
    ,a.dept_name as deptName
    ,a.parent_dept_id as parentDeptId
    ,a.dept_remark as deptRemark
    ,a.dept_status as deptStatus
    ,a.add_time as addTime
    ,b.user_true_name as addUserName
    FROM sys_department a
    left join sys_user b on b.user_id = a.add_user
    left JOIN sys_company c on c.company_id = a.company_id
    <where>
      1=1
      <if test="companyId != null">
        and a.company_id = #{companyId}
      </if>
      <if test="deptName != null">
        and a.dept_name like CONCAT('%',#{deptName},'%')
      </if>
      <if test="deptStatus != null">
        and a.dept_status = #{deptStatus}
      </if>
      <if test="deptLevel == 1">
        and a.parent_dept_id = 0
      </if>
      <if test="deptLevel == 2">
        and a.parent_dept_id > 0
      </if>
    </where>

    order by a.add_time desc
  </select>

  <select id="selectListByDto" parameterType="com.park.cloud.common.domain.dto.cms.SysDepartmentDto"
          resultType="com.park.cloud.common.domain.vo.cms.SysDepartmentListVO">
    SELECT
    a.dept_id as deptId
    ,a.dept_name as deptName
    FROM sys_department a
    <where>
      1=1
      <if test="companyId != null">
        and a.company_id = #{companyId}
      </if>
      <if test="deptName != null">
        and a.dept_name like CONCAT('%',#{deptName},'%')
      </if>
      <if test="deptStatus != null">
        and a.dept_status = #{deptStatus}
      </if>
      <if test="deptLevel == 1">
        and a.parent_dept_id = 0
      </if>
      <if test="deptLevel == 2">
        and a.parent_dept_id > 0
      </if>
    </where>

    order by a.add_time desc
  </select>

</mapper>