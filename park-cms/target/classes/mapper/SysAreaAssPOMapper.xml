<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.park.cloud.cms.mapper.SysAreaAssPOMapper">
  <resultMap id="BaseResultMap" type="com.park.cloud.common.domain.po.sys.SysAreaAssPO">
    <id column="areaass_id" jdbcType="INTEGER" property="areaassId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="area_ass_type" jdbcType="INTEGER" property="areaAssType" />
    <result column="city_ids" jdbcType="VARCHAR" property="cityIds" />
    <result column="canton_ids" jdbcType="VARCHAR" property="cantonIds" />
    <result column="area_ids" jdbcType="VARCHAR" property="areaIds" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="add_user" jdbcType="INTEGER" property="addUser" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    areaass_id, user_id, area_ass_type, city_ids, canton_ids, area_ids, other, add_user, 
    add_time, remarks
  </sql>
  <select id="selectByExample" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_area_ass
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_area_ass
    where areaass_id = #{areaassId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_area_ass
    where areaass_id = #{areaassId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPOExample">
    delete from sys_area_ass
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPO">
    insert into sys_area_ass (areaass_id, user_id, area_ass_type, 
      city_ids, canton_ids, area_ids, 
      other, add_user, add_time, 
      remarks)
    values (#{areaassId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{areaAssType,jdbcType=INTEGER}, 
      #{cityIds,jdbcType=VARCHAR}, #{cantonIds,jdbcType=VARCHAR}, #{areaIds,jdbcType=VARCHAR}, 
      #{other,jdbcType=VARCHAR}, #{addUser,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPO">
    insert into sys_area_ass
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="areaassId != null">
        areaass_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="areaAssType != null">
        area_ass_type,
      </if>
      <if test="cityIds != null">
        city_ids,
      </if>
      <if test="cantonIds != null">
        canton_ids,
      </if>
      <if test="areaIds != null">
        area_ids,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="addUser != null">
        add_user,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="areaassId != null">
        #{areaassId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="areaAssType != null">
        #{areaAssType,jdbcType=INTEGER},
      </if>
      <if test="cityIds != null">
        #{cityIds,jdbcType=VARCHAR},
      </if>
      <if test="cantonIds != null">
        #{cantonIds,jdbcType=VARCHAR},
      </if>
      <if test="areaIds != null">
        #{areaIds,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="addUser != null">
        #{addUser,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPOExample" resultType="java.lang.Long">
    select count(*) from sys_area_ass
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_area_ass
    <set>
      <if test="record.areaassId != null">
        areaass_id = #{record.areaassId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.areaAssType != null">
        area_ass_type = #{record.areaAssType,jdbcType=INTEGER},
      </if>
      <if test="record.cityIds != null">
        city_ids = #{record.cityIds,jdbcType=VARCHAR},
      </if>
      <if test="record.cantonIds != null">
        canton_ids = #{record.cantonIds,jdbcType=VARCHAR},
      </if>
      <if test="record.areaIds != null">
        area_ids = #{record.areaIds,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.addUser != null">
        add_user = #{record.addUser,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_area_ass
    set areaass_id = #{record.areaassId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      area_ass_type = #{record.areaAssType,jdbcType=INTEGER},
      city_ids = #{record.cityIds,jdbcType=VARCHAR},
      canton_ids = #{record.cantonIds,jdbcType=VARCHAR},
      area_ids = #{record.areaIds,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR},
      add_user = #{record.addUser,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPO">
    update sys_area_ass
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="areaAssType != null">
        area_ass_type = #{areaAssType,jdbcType=INTEGER},
      </if>
      <if test="cityIds != null">
        city_ids = #{cityIds,jdbcType=VARCHAR},
      </if>
      <if test="cantonIds != null">
        canton_ids = #{cantonIds,jdbcType=VARCHAR},
      </if>
      <if test="areaIds != null">
        area_ids = #{areaIds,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="addUser != null">
        add_user = #{addUser,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where areaass_id = #{areaassId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.cloud.common.domain.po.sys.SysAreaAssPO">
    update sys_area_ass
    set user_id = #{userId,jdbcType=INTEGER},
      area_ass_type = #{areaAssType,jdbcType=INTEGER},
      city_ids = #{cityIds,jdbcType=VARCHAR},
      canton_ids = #{cantonIds,jdbcType=VARCHAR},
      area_ids = #{areaIds,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR},
      add_user = #{addUser,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where areaass_id = #{areaassId,jdbcType=INTEGER}
  </update>

  <select id="selectByDto" parameterType="com.park.cloud.common.domain.dto.cms.SysAreaAssDto"
          resultType="com.park.cloud.common.domain.vo.cms.SysAreaAssVO">
    SELECT
    a.user_id as userId
    ,a.user_name as userName
    ,a.user_true_name as userTrueName
    ,b.areaass_id as areaassId
    ,b.area_ass_type as areaAssType
    ,b.city_ids as cityIds
    ,b.canton_ids as cantonIds
    ,b.area_ids as areaIds
    ,b.remarks as remarks
    ,(select GROUP_CONCAT(aa.city_name) FROM dict_city aa where aa.city_id in (
    select substring_index(substring_index(b.city_ids,',',help_topic_id+1),',',-1) as id
    from mysql.help_topic
    where help_topic_id&lt;(length(b.city_ids)-length(replace(b.city_ids,',',''))+1))) as cityNames
    ,(select GROUP_CONCAT(ab.canton_name) FROM dict_canton ab where ab.canton_id in (
    select substring_index(substring_index(b.canton_ids,',',help_topic_id+1),',',-1) as id
    from mysql.help_topic
    where help_topic_id&lt;(length(b.canton_ids)-length(replace(b.canton_ids,',',''))+1))) as cantonNames
    ,(select GROUP_CONCAT(ac.area_name) FROM dict_area ac where ac.area_id in (
    select substring_index(substring_index(b.area_ids,',',help_topic_id+1),',',-1) as id
    from mysql.help_topic
    where help_topic_id&lt;(length(b.area_ids)-length(replace(b.area_ids,',',''))+1))) as areaNames
    FROM sys_user a
    left join sys_area_ass b on b.user_id = a.user_id
    <where>
      a.role_id != 0
      <if test="userName != null">
        and a.user_name like CONCAT('%',#{userName},'%')
      </if>
      <if test="userTrueName != null">
        and a.user_true_name like CONCAT('%',#{userTrueName},'%')
      </if>
    </where>
    order by a.add_time desc
  </select>

</mapper>