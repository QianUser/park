<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.park.cloud.cms.mapper.RepParkRefundByDayPOMapper">
  <resultMap id="BaseResultMap" type="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="statistics_day" jdbcType="VARCHAR" property="statisticsDay" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="canton_id" jdbcType="INTEGER" property="cantonId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="parking_section_id" jdbcType="INTEGER" property="parkingSectionId" />
    <result column="parking_section_name" jdbcType="VARCHAR" property="parkingSectionName" />
    <result column="parking_type" jdbcType="INTEGER" property="parkingType" />
    <result column="refund_num" jdbcType="INTEGER" property="refundNum" />
    <result column="refund_price" jdbcType="INTEGER" property="refundPrice" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, statistics_day, city_id, canton_id, area_id, parking_section_id, parking_section_name, 
    parking_type, refund_num, refund_price, add_time
  </sql>
  <select id="selectByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rep_park_refund_by_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rep_park_refund_by_day
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from rep_park_refund_by_day
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPOExample">
    delete from rep_park_refund_by_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPO">
    insert into rep_park_refund_by_day (id, statistics_day, city_id, 
      canton_id, area_id, parking_section_id, 
      parking_section_name, parking_type, refund_num, 
      refund_price, add_time)
    values (#{id,jdbcType=BIGINT}, #{statisticsDay,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, 
      #{cantonId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{parkingSectionId,jdbcType=INTEGER}, 
      #{parkingSectionName,jdbcType=VARCHAR}, #{parkingType,jdbcType=INTEGER}, #{refundNum,jdbcType=INTEGER}, 
      #{refundPrice,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPO">
    insert into rep_park_refund_by_day
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="statisticsDay != null">
        statistics_day,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="cantonId != null">
        canton_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="parkingSectionId != null">
        parking_section_id,
      </if>
      <if test="parkingSectionName != null">
        parking_section_name,
      </if>
      <if test="parkingType != null">
        parking_type,
      </if>
      <if test="refundNum != null">
        refund_num,
      </if>
      <if test="refundPrice != null">
        refund_price,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="statisticsDay != null">
        #{statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionId != null">
        #{parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionName != null">
        #{parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="parkingType != null">
        #{parkingType,jdbcType=INTEGER},
      </if>
      <if test="refundNum != null">
        #{refundNum,jdbcType=INTEGER},
      </if>
      <if test="refundPrice != null">
        #{refundPrice,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPOExample" resultType="java.lang.Long">
    select count(*) from rep_park_refund_by_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rep_park_refund_by_day
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.statisticsDay != null">
        statistics_day = #{record.statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.cantonId != null">
        canton_id = #{record.cantonId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.parkingSectionId != null">
        parking_section_id = #{record.parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.parkingSectionName != null">
        parking_section_name = #{record.parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.parkingType != null">
        parking_type = #{record.parkingType,jdbcType=INTEGER},
      </if>
      <if test="record.refundNum != null">
        refund_num = #{record.refundNum,jdbcType=INTEGER},
      </if>
      <if test="record.refundPrice != null">
        refund_price = #{record.refundPrice,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rep_park_refund_by_day
    set id = #{record.id,jdbcType=BIGINT},
      statistics_day = #{record.statisticsDay,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER},
      canton_id = #{record.cantonId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      parking_section_id = #{record.parkingSectionId,jdbcType=INTEGER},
      parking_section_name = #{record.parkingSectionName,jdbcType=VARCHAR},
      parking_type = #{record.parkingType,jdbcType=INTEGER},
      refund_num = #{record.refundNum,jdbcType=INTEGER},
      refund_price = #{record.refundPrice,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPO">
    update rep_park_refund_by_day
    <set>
      <if test="statisticsDay != null">
        statistics_day = #{statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        canton_id = #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionId != null">
        parking_section_id = #{parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionName != null">
        parking_section_name = #{parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="parkingType != null">
        parking_type = #{parkingType,jdbcType=INTEGER},
      </if>
      <if test="refundNum != null">
        refund_num = #{refundNum,jdbcType=INTEGER},
      </if>
      <if test="refundPrice != null">
        refund_price = #{refundPrice,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.cloud.common.domain.po.rep.RepParkRefundByDayPO">
    update rep_park_refund_by_day
    set statistics_day = #{statisticsDay,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER},
      canton_id = #{cantonId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      parking_section_id = #{parkingSectionId,jdbcType=INTEGER},
      parking_section_name = #{parkingSectionName,jdbcType=VARCHAR},
      parking_type = #{parkingType,jdbcType=INTEGER},
      refund_num = #{refundNum,jdbcType=INTEGER},
      refund_price = #{refundPrice,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getRepParkRefund" parameterType="com.park.cloud.common.domain.dto.cms.RepParkRefundByDayDto" resultType="com.park.cloud.common.domain.vo.cms.RepParkRefundByDayVO">
    SELECT parking_section_name as sectionName,
    parking_section_id as sectionId ,
    parking_type  as  parkingType,
    refund_num   as refundNum,
    refund_price  as refundPrice,
    statistics_day as statisticsDay
    FROM rep_park_refund_by_day
    <where>
     1=1
      <if test="sectionName != null and ''!=sectionName  ">
        and parking_section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test="statisticsStartDay != null and ''!=statisticsStartDay ">
        and statistics_day <![CDATA[ >= ]]> #{statisticsStartDay}
      </if>
      <if test="statisticsEndDay != null and ''!=statisticsEndDay ">
        and statistics_day  <![CDATA[ <= ]]> #{statisticsEndDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
  <select id="findMoneyCount" parameterType="com.park.cloud.common.domain.dto.cms.RepParkCountRefundDto" resultType="java.lang.Integer">
    SELECT  ifnull(sum(refund_price),0)
    FROM rep_park_refund_by_day
    <where>
      1=1
      <if test="sectionName != null and '' !=sectionName ">
        and parking_section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test="  parkingType!= null and ''!=parkingType ">
        and parking_type =#{parkingType}
      </if>
      <if test="statisticsStartDay != null and ''!=statisticsStartDay ">
        and statistics_day <![CDATA[ >= ]]> #{statisticsStartDay}
      </if>
      <if test="statisticsEndDay != null and ''!=statisticsEndDay ">
        and statistics_day    <![CDATA[ <= ]]>   #{statisticsEndDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
  <select id="getRefundCount" parameterType="com.park.cloud.common.domain.dto.cms.RepParkCountRefundDto" resultType="java.lang.Integer">
    SELECT   ifnull(sum(refund_num),0)
    FROM rep_park_refund_by_day
    <where>
      1=1
      <if test="sectionName != null and ''!=sectionName ">
        and parking_section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test=" parkingType!= null  and ''!=parkingType ">
        and parking_type =#{parkingType}
      </if>
      <if test="statisticsStartDay != null and ''!=statisticsStartDay ">
        and statistics_day <![CDATA[ >= ]]> #{statisticsStartDay}
      </if>
      <if test="statisticsEndDay != null and ''!=statisticsEndDay ">
        and statistics_day  <![CDATA[ <= ]]> #{statisticsEndDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
  <select id="getRefundAndPakring" parameterType="com.park.cloud.common.domain.dto.cms.RepParkCountRefundDto" resultType="com.park.cloud.common.domain.vo.cms.RepParkingAndRefundVO">
    SELECT
    parking_section_name as  sectionName,
    refund_num   as refundNum
    FROM rep_park_refund_by_day
    <where>
      1=1
      <if test="sectionName != null and ''!=sectionName ">
        and parking_section_name like CONCAT('%',#{sectionName},'%')
      </if>
      <if test="  parkingType!= null and ''!=parkingType  ">
        and parking_type =#{parkingType}
      </if>
      <if test="statisticsStartDay != null and ''!=statisticsStartDay ">
        and statistics_day <![CDATA[ >= ]]> #{statisticsStartDay}
      </if>
      <if test="statisticsEndDay != null and ''!=statisticsEndDay ">
        and statistics_day  <![CDATA[ <= ]]> #{statisticsEndDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>

</mapper>