<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.park.cloud.cms.mapper.RepParkTimePOMapper">
  <resultMap id="BaseResultMap" type="com.park.cloud.common.domain.po.rep.RepParkTimePO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="statistics_day" jdbcType="VARCHAR" property="statisticsDay" />
    <result column="statistics_hour" jdbcType="VARCHAR" property="statisticsHour" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="canton_id" jdbcType="INTEGER" property="cantonId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="parking_section_id" jdbcType="INTEGER" property="parkingSectionId" />
    <result column="parking_section_name" jdbcType="VARCHAR" property="parkingSectionName" />
    <result column="parking_type" jdbcType="INTEGER" property="parkingType" />
    <result column="park_time_type" jdbcType="INTEGER" property="parkTimeType" />
    <result column="park_num" jdbcType="INTEGER" property="parkNum" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, statistics_day, statistics_hour, city_id, canton_id, area_id, parking_section_id, 
    parking_section_name, parking_type, park_time_type, park_num, update_time
  </sql>
  <select id="selectByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rep_park_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rep_park_time
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rep_park_time
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePOExample">
    delete from rep_park_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePO">
    insert into rep_park_time (id, statistics_day, statistics_hour, 
      city_id, canton_id, area_id, 
      parking_section_id, parking_section_name, parking_type, 
      park_time_type, park_num, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{statisticsDay,jdbcType=VARCHAR}, #{statisticsHour,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=INTEGER}, #{cantonId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{parkingSectionId,jdbcType=INTEGER}, #{parkingSectionName,jdbcType=VARCHAR}, #{parkingType,jdbcType=INTEGER}, 
      #{parkTimeType,jdbcType=INTEGER}, #{parkNum,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePO">
    insert into rep_park_time
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="statisticsDay != null">
        statistics_day,
      </if>
      <if test="statisticsHour != null">
        statistics_hour,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="cantonId != null">
        canton_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="parkingSectionId != null">
        parking_section_id,
      </if>
      <if test="parkingSectionName != null">
        parking_section_name,
      </if>
      <if test="parkingType != null">
        parking_type,
      </if>
      <if test="parkTimeType != null">
        park_time_type,
      </if>
      <if test="parkNum != null">
        park_num,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="statisticsDay != null">
        #{statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="statisticsHour != null">
        #{statisticsHour,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionId != null">
        #{parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionName != null">
        #{parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="parkingType != null">
        #{parkingType,jdbcType=INTEGER},
      </if>
      <if test="parkTimeType != null">
        #{parkTimeType,jdbcType=INTEGER},
      </if>
      <if test="parkNum != null">
        #{parkNum,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePOExample" resultType="java.lang.Long">
    select count(*) from rep_park_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rep_park_time
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.statisticsDay != null">
        statistics_day = #{record.statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="record.statisticsHour != null">
        statistics_hour = #{record.statisticsHour,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.cantonId != null">
        canton_id = #{record.cantonId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.parkingSectionId != null">
        parking_section_id = #{record.parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.parkingSectionName != null">
        parking_section_name = #{record.parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.parkingType != null">
        parking_type = #{record.parkingType,jdbcType=INTEGER},
      </if>
      <if test="record.parkTimeType != null">
        park_time_type = #{record.parkTimeType,jdbcType=INTEGER},
      </if>
      <if test="record.parkNum != null">
        park_num = #{record.parkNum,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rep_park_time
    set id = #{record.id,jdbcType=INTEGER},
      statistics_day = #{record.statisticsDay,jdbcType=VARCHAR},
      statistics_hour = #{record.statisticsHour,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER},
      canton_id = #{record.cantonId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      parking_section_id = #{record.parkingSectionId,jdbcType=INTEGER},
      parking_section_name = #{record.parkingSectionName,jdbcType=VARCHAR},
      parking_type = #{record.parkingType,jdbcType=INTEGER},
      park_time_type = #{record.parkTimeType,jdbcType=INTEGER},
      park_num = #{record.parkNum,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePO">
    update rep_park_time
    <set>
      <if test="statisticsDay != null">
        statistics_day = #{statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="statisticsHour != null">
        statistics_hour = #{statisticsHour,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        canton_id = #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionId != null">
        parking_section_id = #{parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionName != null">
        parking_section_name = #{parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="parkingType != null">
        parking_type = #{parkingType,jdbcType=INTEGER},
      </if>
      <if test="parkTimeType != null">
        park_time_type = #{parkTimeType,jdbcType=INTEGER},
      </if>
      <if test="parkNum != null">
        park_num = #{parkNum,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.cloud.common.domain.po.rep.RepParkTimePO">
    update rep_park_time
    set statistics_day = #{statisticsDay,jdbcType=VARCHAR},
      statistics_hour = #{statisticsHour,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER},
      canton_id = #{cantonId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      parking_section_id = #{parkingSectionId,jdbcType=INTEGER},
      parking_section_name = #{parkingSectionName,jdbcType=VARCHAR},
      parking_type = #{parkingType,jdbcType=INTEGER},
      park_time_type = #{parkTimeType,jdbcType=INTEGER},
      park_num = #{parkNum,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllData" parameterType="com.park.cloud.common.domain.dto.cms.RepParkByHourTopDto" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
     from rep_park_time
    <where>
     1=1
     <if test="statisticsDay!=null and ''!=statisticsDay ">
       and statistics_day = #{statisticsDay}
     </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
  <select id="findParkCount" parameterType="com.park.cloud.common.domain.dto.cms.RepParkByHourTopDto" resultType="int">
    select
    ifnull(sum(park_num),0)
    from rep_park_time
    <where>
      1=1
      <if test="statisticsDay!=null and ''!=statisticsDay ">
        and statistics_day = #{statisticsDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
</mapper>