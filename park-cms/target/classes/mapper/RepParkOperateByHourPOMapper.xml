<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.park.cloud.cms.mapper.RepParkOperateByHourPOMapper">
  <resultMap id="BaseResultMap" type="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="statistics_day" jdbcType="VARCHAR" property="statisticsDay" />
    <result column="statistics_hour" jdbcType="VARCHAR" property="statisticsHour" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="canton_id" jdbcType="INTEGER" property="cantonId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="parking_section_id" jdbcType="INTEGER" property="parkingSectionId" />
    <result column="parking_section_name" jdbcType="VARCHAR" property="parkingSectionName" />
    <result column="parking_type" jdbcType="INTEGER" property="parkingType" />
    <result column="park_num" jdbcType="INTEGER" property="parkNum" />
    <result column="current_park_num" jdbcType="INTEGER" property="currentParkNum" />
    <result column="total_park_num" jdbcType="INTEGER" property="totalParkNum" />
    <result column="pay_num" jdbcType="INTEGER" property="payNum" />
    <result column="arrears_num" jdbcType="INTEGER" property="arrearsNum" />
    <result column="receivable_price" jdbcType="INTEGER" property="receivablePrice" />
    <result column="receipt_price" jdbcType="INTEGER" property="receiptPrice" />
    <result column="pay_ratio" jdbcType="DECIMAL" property="payRatio" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, statistics_day, statistics_hour, city_id, canton_id, area_id, parking_section_id, 
    parking_section_name, parking_type, park_num, current_park_num, total_park_num, pay_num, 
    arrears_num, receivable_price, receipt_price, pay_ratio, add_time
  </sql>
  <select id="selectByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rep_park_operate_by_hour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rep_park_operate_by_hour
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rep_park_operate_by_hour
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPOExample">
    delete from rep_park_operate_by_hour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPO">
    insert into rep_park_operate_by_hour (id, statistics_day, statistics_hour, 
      city_id, canton_id, area_id, 
      parking_section_id, parking_section_name, parking_type, 
      park_num, current_park_num, total_park_num, 
      pay_num, arrears_num, receivable_price, 
      receipt_price, pay_ratio, add_time
      )
    values (#{id,jdbcType=INTEGER}, #{statisticsDay,jdbcType=VARCHAR}, #{statisticsHour,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=INTEGER}, #{cantonId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{parkingSectionId,jdbcType=INTEGER}, #{parkingSectionName,jdbcType=VARCHAR}, #{parkingType,jdbcType=INTEGER}, 
      #{parkNum,jdbcType=INTEGER}, #{currentParkNum,jdbcType=INTEGER}, #{totalParkNum,jdbcType=INTEGER}, 
      #{payNum,jdbcType=INTEGER}, #{arrearsNum,jdbcType=INTEGER}, #{receivablePrice,jdbcType=INTEGER}, 
      #{receiptPrice,jdbcType=INTEGER}, #{payRatio,jdbcType=DECIMAL}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPO">
    insert into rep_park_operate_by_hour
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="statisticsDay != null">
        statistics_day,
      </if>
      <if test="statisticsHour != null">
        statistics_hour,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="cantonId != null">
        canton_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="parkingSectionId != null">
        parking_section_id,
      </if>
      <if test="parkingSectionName != null">
        parking_section_name,
      </if>
      <if test="parkingType != null">
        parking_type,
      </if>
      <if test="parkNum != null">
        park_num,
      </if>
      <if test="currentParkNum != null">
        current_park_num,
      </if>
      <if test="totalParkNum != null">
        total_park_num,
      </if>
      <if test="payNum != null">
        pay_num,
      </if>
      <if test="arrearsNum != null">
        arrears_num,
      </if>
      <if test="receivablePrice != null">
        receivable_price,
      </if>
      <if test="receiptPrice != null">
        receipt_price,
      </if>
      <if test="payRatio != null">
        pay_ratio,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="statisticsDay != null">
        #{statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="statisticsHour != null">
        #{statisticsHour,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionId != null">
        #{parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionName != null">
        #{parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="parkingType != null">
        #{parkingType,jdbcType=INTEGER},
      </if>
      <if test="parkNum != null">
        #{parkNum,jdbcType=INTEGER},
      </if>
      <if test="currentParkNum != null">
        #{currentParkNum,jdbcType=INTEGER},
      </if>
      <if test="totalParkNum != null">
        #{totalParkNum,jdbcType=INTEGER},
      </if>
      <if test="payNum != null">
        #{payNum,jdbcType=INTEGER},
      </if>
      <if test="arrearsNum != null">
        #{arrearsNum,jdbcType=INTEGER},
      </if>
      <if test="receivablePrice != null">
        #{receivablePrice,jdbcType=INTEGER},
      </if>
      <if test="receiptPrice != null">
        #{receiptPrice,jdbcType=INTEGER},
      </if>
      <if test="payRatio != null">
        #{payRatio,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPOExample" resultType="java.lang.Long">
    select count(*) from rep_park_operate_by_hour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rep_park_operate_by_hour
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.statisticsDay != null">
        statistics_day = #{record.statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="record.statisticsHour != null">
        statistics_hour = #{record.statisticsHour,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.cantonId != null">
        canton_id = #{record.cantonId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.parkingSectionId != null">
        parking_section_id = #{record.parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="record.parkingSectionName != null">
        parking_section_name = #{record.parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="record.parkingType != null">
        parking_type = #{record.parkingType,jdbcType=INTEGER},
      </if>
      <if test="record.parkNum != null">
        park_num = #{record.parkNum,jdbcType=INTEGER},
      </if>
      <if test="record.currentParkNum != null">
        current_park_num = #{record.currentParkNum,jdbcType=INTEGER},
      </if>
      <if test="record.totalParkNum != null">
        total_park_num = #{record.totalParkNum,jdbcType=INTEGER},
      </if>
      <if test="record.payNum != null">
        pay_num = #{record.payNum,jdbcType=INTEGER},
      </if>
      <if test="record.arrearsNum != null">
        arrears_num = #{record.arrearsNum,jdbcType=INTEGER},
      </if>
      <if test="record.receivablePrice != null">
        receivable_price = #{record.receivablePrice,jdbcType=INTEGER},
      </if>
      <if test="record.receiptPrice != null">
        receipt_price = #{record.receiptPrice,jdbcType=INTEGER},
      </if>
      <if test="record.payRatio != null">
        pay_ratio = #{record.payRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rep_park_operate_by_hour
    set id = #{record.id,jdbcType=INTEGER},
      statistics_day = #{record.statisticsDay,jdbcType=VARCHAR},
      statistics_hour = #{record.statisticsHour,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=INTEGER},
      canton_id = #{record.cantonId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      parking_section_id = #{record.parkingSectionId,jdbcType=INTEGER},
      parking_section_name = #{record.parkingSectionName,jdbcType=VARCHAR},
      parking_type = #{record.parkingType,jdbcType=INTEGER},
      park_num = #{record.parkNum,jdbcType=INTEGER},
      current_park_num = #{record.currentParkNum,jdbcType=INTEGER},
      total_park_num = #{record.totalParkNum,jdbcType=INTEGER},
      pay_num = #{record.payNum,jdbcType=INTEGER},
      arrears_num = #{record.arrearsNum,jdbcType=INTEGER},
      receivable_price = #{record.receivablePrice,jdbcType=INTEGER},
      receipt_price = #{record.receiptPrice,jdbcType=INTEGER},
      pay_ratio = #{record.payRatio,jdbcType=DECIMAL},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPO">
    update rep_park_operate_by_hour
    <set>
      <if test="statisticsDay != null">
        statistics_day = #{statisticsDay,jdbcType=VARCHAR},
      </if>
      <if test="statisticsHour != null">
        statistics_hour = #{statisticsHour,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="cantonId != null">
        canton_id = #{cantonId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionId != null">
        parking_section_id = #{parkingSectionId,jdbcType=INTEGER},
      </if>
      <if test="parkingSectionName != null">
        parking_section_name = #{parkingSectionName,jdbcType=VARCHAR},
      </if>
      <if test="parkingType != null">
        parking_type = #{parkingType,jdbcType=INTEGER},
      </if>
      <if test="parkNum != null">
        park_num = #{parkNum,jdbcType=INTEGER},
      </if>
      <if test="currentParkNum != null">
        current_park_num = #{currentParkNum,jdbcType=INTEGER},
      </if>
      <if test="totalParkNum != null">
        total_park_num = #{totalParkNum,jdbcType=INTEGER},
      </if>
      <if test="payNum != null">
        pay_num = #{payNum,jdbcType=INTEGER},
      </if>
      <if test="arrearsNum != null">
        arrears_num = #{arrearsNum,jdbcType=INTEGER},
      </if>
      <if test="receivablePrice != null">
        receivable_price = #{receivablePrice,jdbcType=INTEGER},
      </if>
      <if test="receiptPrice != null">
        receipt_price = #{receiptPrice,jdbcType=INTEGER},
      </if>
      <if test="payRatio != null">
        pay_ratio = #{payRatio,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.cloud.common.domain.po.rep.RepParkOperateByHourPO">
    update rep_park_operate_by_hour
    set statistics_day = #{statisticsDay,jdbcType=VARCHAR},
      statistics_hour = #{statisticsHour,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=INTEGER},
      canton_id = #{cantonId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      parking_section_id = #{parkingSectionId,jdbcType=INTEGER},
      parking_section_name = #{parkingSectionName,jdbcType=VARCHAR},
      parking_type = #{parkingType,jdbcType=INTEGER},
      park_num = #{parkNum,jdbcType=INTEGER},
      current_park_num = #{currentParkNum,jdbcType=INTEGER},
      total_park_num = #{totalParkNum,jdbcType=INTEGER},
      pay_num = #{payNum,jdbcType=INTEGER},
      arrears_num = #{arrearsNum,jdbcType=INTEGER},
      receivable_price = #{receivablePrice,jdbcType=INTEGER},
      receipt_price = #{receiptPrice,jdbcType=INTEGER},
      pay_ratio = #{payRatio,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findTop" parameterType="com.park.cloud.common.domain.dto.cms.RepParkByHourTopDto" resultType="com.park.cloud.common.domain.vo.cms.RepParkByHourStatisticsTopVO">
      SELECT
      park_num as parkNum,
      receipt_price as receiptPrice,
      current_park_num as currentParkNum
       from rep_park_operate_by_hour
    <where>
      1=1
      <if test="statisticsDay != null">
        and statistics_day <![CDATA[ = ]]> #{statisticsDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
    ORDER BY add_time
  </select>

  <select id="findBerthCount" parameterType="com.park.cloud.common.domain.dto.cms.RepParkByHourTopDto" resultType="java.lang.Integer">
   SELECT count(*) from dict_berth_city
    <where>
      berth_status!=5
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
  </select>
  <select id="findAllCantonById" parameterType="java.lang.String" resultType="com.park.cloud.common.domain.vo.cms.CantonIdSVO">
    select
    canton_id as cantonId,
    canton_name  as cantonName
    from dict_canton
  where
  1=1
    <if test="loginUserCityIds != ''and loginUserCityIds!=null ">
    and   city_id in (#{loginUserCityIds})
    </if>

  </select>
  <select id="findDataStatistics" parameterType="com.park.cloud.common.domain.dto.cms.RepStatisticsByDayDto" resultType="com.park.cloud.common.domain.vo.cms.RepParkByHourStatisticsTopVO">
    SELECT
    ifnull(count(park_num), 0) as parkNum,
    ifnull(count(receipt_price), 0)  as receiptPrice,
    ifnull(count(current_park_num), 0)  as currentParkNum
    from rep_park_operate_by_hour
    <where>
      1=1
      <if test="statisticsDay != null and ''!=statisticsDay ">
        and statistics_day <![CDATA[ = ]]> #{statisticsDay}
      </if>
      <if test="cantonId !=null and ''!=cantonId ">
        and canton_id = #{cantonId}
      </if>
      <if test="time !=null and ''!=time ">
        and statistics_hour <![CDATA[ = ]]> #{time}
      </if>
    </where>
    ORDER BY add_time
  </select>
  <select id="findNameById" parameterType="java.lang.Integer" resultType="java.lang.String">
    select  canton_name from dict_canton where canton_id=#{cantonId}
  </select>
  <select id="findAllByDate" parameterType="com.park.cloud.common.domain.dto.cms.ReoFindEarningsCaseDto" resultType="com.park.cloud.common.domain.vo.cms.FindEarningsCaseVO">
    SELECT
    SUBSTR(statistics_day,1,10) as statisticsDay,
    ifnull(sum(receipt_price),0)   as receiptPrice
    from rep_park_operate_by_hour
    <where>
      1=1
      <if test="statisticsStartDay != null and ''!=statisticsStartDay ">
        and statistics_day <![CDATA[ >= ]]> #{statisticsStartDay}
      </if>
      <if test="statisticsEndDay != null and ''!=statisticsEndDay ">
        and statistics_day <![CDATA[ <= ]]> #{statisticsEndDay}
      </if>
      <if test="loginUserAreaAssType == 1">
        and city_id in (${loginUserCityIds})
      </if>
      <if test="loginUserAreaAssType == 2">
        and canton_id in (${loginUserCantonIds})
      </if>
      <if test="loginUserAreaAssType == 3">
        and area_id in (${loginUserAreaIds})
      </if>
    </where>
    GROUP BY statisticsDay
  </select>
  <select id="findAllByYearDate" parameterType="com.park.cloud.common.domain.dto.cms.ReoFindEarningsCaseDto" resultType="com.park.cloud.common.domain.vo.cms.FindEarningsCaseVO">
    SELECT
     SUBSTR(statistics_day,1,7) as statisticsDay,
   ifnull(sum(receipt_price),0)   as receiptPrice
    from rep_park_operate_by_hour
		GROUP BY statisticsDay
  </select>
</mapper>